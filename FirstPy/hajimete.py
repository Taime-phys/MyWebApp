
# これでコメントすることができる

'''
こうすると
長いコメントを
書くことができる
'''
'''
このプログラムは
python hajimete.py
で動かせる
'''


x = 1

# 型の宣言などは必要なく、こうすることでxの値の宣言・代入が同時になされる
# ;とかはいらない(改行で分の区切れを判定している)
print("x=", x)

# これで出力
# コンマで区切ることで同じ行内に出力

print("x=")
print(x)

#こうすると別々の行に表示される

def age(birth_year):
    # コロンで「ここから関数の中身である」ということを明示
    # 関数の定義は{}などでくくったりしない。
    # インデントでどこまでがdefの中身か判定している
    return 2018 - birth_year

print("何年生まれですか")
year =int(input())
print(year,"生まれは", age(year), "歳です")

# input関数で入力を取得(ここで入力したものは文字列扱いとなるので(int)で整数型になおしている)
# 関数は他の言語と同じようなノリで使える


if year == 1992:
  print("私と同い年！")

# ifの条件式はカッコがいらない(あってもいい)
# やはり{}は使わず:以降のインデントで判断

li = [1, 2, 3]
# こうすることでリスト(配列のようなもの)を取得できる

print("これはリストです")
print("li[0]=", li[0])
print("li[1]=", li[1])
print("li[2]=", li[2])

# 要素へのアクセスはjavaなどと同じ

print("li=", li)
# そのまま出力も可能


for i in li:
    print("ただいまiの値は", i)
# おそらく他の言語と大きく異なるところ

# pythonのfor文は「リストの中身の全要素に対して施すもの」となっている
# なので、inの次に来るものはリストになっていなければならない


print ("range(10) = ", range(10))

# 他の言語のように0~9まで繰り返したいとなったら、rangeで定義されるこのリストを使う

for i in range(3):
    print(i,"番目だよ")
    print("li[i]の中身は", li[i], "だよ")

# これでi=0,1,2,3,4,5,6,7,8,9までの繰り返しを行える。



